{"version":3,"sources":["hoc/withAuthRedirect.jsx","components/Dialogs/Dialogs.module.scss","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogItem","path","id","className","s","dialog","active","name","Message","message","maxLength50","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","dialogsPage","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","dialogs__items","values","sendMessage","newMessageBody","compose","dispatch","sendMessageCreator"],"mappings":"0NAIIA,EAA6B,SAAAC,GAAK,MAAK,CAAEC,OAAQD,EAAME,KAAKD,SAEnDE,EAAmB,SAAAC,GAAc,IACtCC,EADqC,uKAGvC,OAAKC,KAAKC,MAAMN,OAGT,kBAACG,EAAcE,KAAKC,OAFlB,kBAAC,IAAD,CAAUC,GAAI,eAJgB,GACXC,IAAML,WAWtC,OAFqCM,YAAQX,EAARW,CAAoCL,K,oBCf3EM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,eAAiB,gCAAgC,OAAS,wBAAwB,SAAW,4B,iICenIC,EAXI,SAAAN,GACjB,IAAIO,EAAO,YAAcP,EAAMQ,GAE/B,OACE,yBAAKC,UAAS,UAAKC,IAAEC,OAAP,YAAiBD,IAAEE,SAC/B,kBAAC,IAAD,CAASX,GAAIM,GAAOP,EAAMa,QCFjBC,EAJC,SAAAd,GACd,OAAO,yBAAKS,UAAWC,IAAEK,SAAUf,EAAMe,U,gBCKrCC,EAAcC,YAAiB,IA8C/BC,EAAsBC,YAAU,CACpCC,KAAM,wBADoBD,EAlBL,SAAAnB,GACrB,OACE,0BAAMqB,SAAUrB,EAAMsB,cACpB,6BACE,kBAACC,EAAA,EAAD,CACEV,KAAM,iBACNW,UAAWC,IACXC,YAAY,qBACZC,SAAU,CAACC,IAAUZ,MAGzB,6BACE,6CAUOa,EAhDC,SAAA7B,GACd,IAAIP,EAAQO,EAAM8B,YAEdC,EAAkBtC,EAAMuC,QAAQC,KAAI,SAAAC,GAAC,OACvC,kBAAC,EAAD,CAAYrB,KAAMqB,EAAErB,KAAMsB,IAAKD,EAAE1B,GAAIA,GAAI0B,EAAE1B,QAGzC4B,EAAmB3C,EAAM4C,SAASJ,KAAI,SAAAK,GAAC,OACzC,kBAAC,EAAD,CAASvB,QAASuB,EAAEvB,QAASoB,IAAKG,EAAE9B,QAOtC,OACE,yBAAKC,UAAWC,IAAEsB,SAChB,yBAAKvB,UAAWC,IAAE6B,gBAAiBR,GACnC,yBAAKtB,UAAWC,IAAE2B,UAChB,6BAAMD,GACN,kBAAClB,EAAD,CAAqBG,SATV,SAAAmB,GACfxC,EAAMyC,YAAYD,EAAOE,sB,OCNdC,sBACbxC,aAXoB,SAAAV,GAAK,MAAK,CAAEqC,YAAarC,EAAMqC,gBAE5B,SAAAc,GACvB,MAAO,CACLH,YAAa,SAAAC,GACXE,EAASC,YAAmBH,SAOhC9C,IAFa+C,CAGbd","file":"static/js/5.92b84df4.chunk.js","sourcesContent":["import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nlet mapStateToPropsForRedirect = state => ({ isAuth: state.auth.isAuth });\n\nexport const withAuthRedirect = Component => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) {\n        return <Redirect to={\"/login\"} />;\n      }\n      return <Component {...this.props} />;\n    }\n  }\n\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n\n  return ConnectedAuthRedirectComponent;\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2Gkkf\",\"dialogs__items\":\"Dialogs_dialogs__items__3P5KO\",\"active\":\"Dialogs_active__3lrrn\",\"messages\":\"Dialogs_messages__1J3nn\"};","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport s from \"./../Dialogs.module.scss\";\n\nconst DialogItem = props => {\n  let path = '/dialogs/' + props.id;\n\n  return (\n    <div className={`${s.dialog} ${s.active}`}>\n      <NavLink to={path}>{props.name}</NavLink>\n    </div>\n  );\n};\n\n\nexport default DialogItem;\n","import React from \"react\";\n\nimport s from \"./../Dialogs.module.scss\";\n\nconst Message = props => {\n  return <div className={s.message}>{props.message}</div>;\n};\n\nexport default Message;\n","import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\n\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport { Textarea } from \"../common/FormControls/FormControls\";\n\nimport s from \"./Dialogs.module.scss\";\nimport { required, maxLengthCreator } from \"../../utils/validators/validators\";\n\nconst maxLength50 = maxLengthCreator(50);\n\nconst Dialogs = props => {\n  let state = props.dialogsPage;\n\n  let dialogsElements = state.dialogs.map(d => (\n    <DialogItem name={d.name} key={d.id} id={d.id} />\n  ));\n\n  let messagesElements = state.messages.map(m => (\n    <Message message={m.message} key={m.id} />\n  ));\n\n  const onSubmit = values => {\n    props.sendMessage(values.newMessageBody);\n  };\n\n  return (\n    <div className={s.dialogs}>\n      <div className={s.dialogs__items}>{dialogsElements}</div>\n      <div className={s.messages}>\n        <div>{messagesElements}</div>\n        <AddMessageReduxForm onSubmit={onSubmit} />\n      </div>\n    </div>\n  );\n};\n\nconst AddMessageForm = props => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field\n          name={\"newMessageBody\"}\n          component={Textarea}\n          placeholder=\"Enter your message\"\n          validate={[required, maxLength50]}\n        />\n      </div>\n      <div>\n        <button>Send</button>\n      </div>\n    </form>\n  );\n};\n\nconst AddMessageReduxForm = reduxForm({\n  form: \"dialogAddMessageForm\"\n})(AddMessageForm);\n\nexport default Dialogs;\n","import { connect } from \"react-redux\";\n\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { sendMessageCreator } from \"../../redux/dialogs-reducer\";\n\nimport Dialogs from \"./Dialogs\";\nimport { compose } from \"redux\";\n\nlet mapStateToProps = state => ({ dialogsPage: state.dialogsPage });\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    sendMessage: newMessageBody => {\n      dispatch(sendMessageCreator(newMessageBody));\n    }\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withAuthRedirect\n)(Dialogs);\n"],"sourceRoot":""}