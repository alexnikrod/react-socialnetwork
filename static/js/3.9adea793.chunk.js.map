{"version":3,"sources":["hoc/withAuthRedirect.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","assets/images/bill.jpg","components/Profile/ProfileInfo/ProfileInfo.module.scss","components/Profile/MyPosts/MyPosts.module.scss","components/Profile/MyPosts/Posts/Post.module.scss","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Posts/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","ProfileReduxForm","reduxForm","form","handleSubmit","error","profile","onSubmit","className","style","formControl__error","createField","Input","required","Textarea","type","keys","contacts","map","key","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onClick","onChange","e","currentTarget","onBlur","updateStatus","autoFocus","ProfileData","goToEditMode","isOwner","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","ProfileInfo","savePhoto","saveProfile","Preloader","s","descriptionBlock","userPhoto","src","photos","large","alt","target","files","initialValues","formData","then","Post","item","message","likesCount","maxLength10","maxLengthCreator","MyPosts","memo","postsElements","posts","p","id","postsBlock","AddPostReduxForm","values","addPost","newPostText","Field","name","component","placeholder","validate","MyPostsContainer","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","setUserProfileThunk","getUserStatus","refreshProfile","prevProps","updateUserStatus","savePhotoTh","compose","withRouter"],"mappings":"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","file":"static/js/3.9adea793.chunk.js","sourcesContent":["import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nlet mapStateToPropsForRedirect = state => ({ isAuth: state.auth.isAuth });\n\nexport const withAuthRedirect = Component => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) {\n        return <Redirect to={\"/login\"} />;\n      }\n      return <Component {...this.props} />;\n    }\n  }\n\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n\n  return ConnectedAuthRedirectComponent;\n};\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","module.exports = __webpack_public_path__ + \"static/media/bill.9bea4bf7.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__gOOQY\",\"userPhoto\":\"ProfileInfo_userPhoto__4AhkJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1cAL4\",\"posts\":\"MyPosts_posts__1P0sL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1lmk6\"};","import React from \"react\";\nimport { reduxForm } from \"redux-form\";\n\nimport { createField, Input, Textarea } from \"../../common/FormControls/FormControls\";\nimport { required } from \"../../../utils/validators/validators\";\nimport style from \"../../common/FormControls/FormControls.module.scss\";\n\nconst ProfileDataForm = ({ handleSubmit, error, profile }) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      {error && (\n        <div className={style.formControl__error}>\n          <span>{error}</span>\n        </div>\n      )}\n      <div>\n        <button>Save</button>\n      </div>\n      <div>\n        <b>Full Name</b>: {createField(\"fullName\", \"Full Name\", Input, [required])}\n      </div>\n      <div>\n        <b>About Me</b>:{createField(\"aboutMe\", \"About Me\", Textarea, [])}\n      </div>\n      <div>\n        {createField(\"lookingForAJob\", \"\", Input, [], { type: \"checkbox\" }\n      )} Looking for a Job\n      </div>\n      <div>\n        <b>My Professional Skills</b>:{createField(\"lookingForAJobDescription\", \"My Skills\", Textarea, [])}\n      </div>\n      <div>\n        <b>Contacts</b>:{Object.keys(profile.contacts).map(key => {\n          return <div key={key}><b>{key}: {createField(\"contacts.\" + key, key, Input, [])}</b></div>\n        })}\n      </div>\n    </form>\n  );\n};\n\nconst ProfileReduxForm = reduxForm({\n  form: \"edit-profile\"\n})(ProfileDataForm);\n\nexport default ProfileReduxForm;\n","import React, { useEffect } from \"react\";\nimport { useState } from \"react\";\n\nconst ProfileStatusWithHooks = props => {\n  let [editMode, setEditMode] = useState(false);\n  let [status, setStatus] = useState(props.status);\n\n  useEffect(() => {\n    setStatus(props.status);\n  }, [props.status]);\n\n  const activateEditMode = () => {\n    setEditMode(true);\n  };\n\n  const deactivateEditMode = () => {\n    setEditMode(false);\n    props.updateStatus(status);\n  };\n\n  const onStatusChange = e => {\n    setStatus(e.currentTarget.value);\n  };\n\n  return (\n    <div>\n      {!editMode && (\n        <div>\n          <span onClick={activateEditMode}>\n            {props.status || \"*no status*\"}\n          </span>\n        </div>\n      )}\n      {editMode && (\n        <div>\n          <input\n            onChange={onStatusChange}\n            onBlur={deactivateEditMode}\n            value={status}\n            autoFocus\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProfileStatusWithHooks;\n","import React, { useState } from \"react\";\n\nimport s from \"./ProfileInfo.module.scss\";\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport userPhoto from \"../../../assets/images/bill.jpg\";\nimport ProfileDataForm from \"./ProfileDataForm\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\n\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto, saveProfile }) => {\n  let [editMode, setEditMode] = useState(false);\n  if (!profile) {\n    return <Preloader />;\n  }\n\n  const onMainPhotoSelected = e => {\n    if (e.target.files.length) {\n      savePhoto(e.target.files[0]);\n    }\n  };\n\n  const onSubmit = formData => {\n    saveProfile(formData).then(\n      () => {\n        setEditMode(false);\n      }\n    );\n  };\n\n  return (\n    <div>\n      <div className={s.descriptionBlock}>\n        <img\n          className={s.userPhoto}\n          src={profile.photos.large || userPhoto}\n          alt=\"large\"\n        />\n        <div>\n          {isOwner && <input type=\"file\" onChange={onMainPhotoSelected} />}\n        </div>\n        <div>\n          <b>Status</b>:\n          <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\n        </div>\n      </div>\n      {editMode ? (\n        <ProfileDataForm\n          initialValues={profile}\n          profile={profile}\n          onSubmit={onSubmit}\n        />\n      ) : (\n        <ProfileData goToEditMode={() => {setEditMode(true)}} profile={profile} isOwner={isOwner} />\n      )}\n    </div>\n  );\n};\n\nconst ProfileData = ({goToEditMode, profile, isOwner}) => {\n  return <div>\n    {isOwner && <div><button onClick={goToEditMode}>Edit</button></div>}\n    <div>\n    <div>\n        <b>Full Name</b>: {profile.fullName}\n      </div>\n      <div>\n        <b>About Me</b>:{profile.aboutMe}\n      </div>\n      <div><b>Looking for a Job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"} \n      </div>\n      <div>\n        <b>My Professional Skills</b>:{profile.lookingForAJobDescription}\n      </div>\n      <div>\n        <b>Contacts</b>:{Object.keys(profile.contacts).map(key => {\n          return <div key={key}>{key}: {profile.contacts[key]}</div>\n        })}\n      </div>\n    </div>\n  </div>\n}\n\nexport default ProfileInfo;\n","import React from \"react\";\nimport s from \"./Post.module.scss\";\n\nconst Post = props => {\n  return (\n    <div className={s.item}>\n      <img \n        src=\"https://i.ya-webdesign.com/images/funny-png-avatar-2.png\"\n        alt=\"ava\"\n      />\n      {props.message}\n      <div>\n        <span>Like {props.likesCount}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\n\nimport s from \"./MyPosts.module.scss\";\nimport Posts from \"./Posts/Post\";\nimport {\n  required,\n  maxLengthCreator\n} from \"../../../utils/validators/validators\";\nimport { Textarea } from \"../../common/FormControls/FormControls\";\n\nconst maxLength10 = maxLengthCreator(10);\n\nconst MyPosts = React.memo(props => {\n  let postsElements = props.posts.map(p => (\n    <Posts message={p.message} likesCount={p.likesCount} key={p.id} />\n  ));\n\n  const onAddPost = values => {\n    props.addPost(values.newPostText);\n  };\n\n  return (\n    <div className={s.postsBlock}>\n      <h3>My posts</h3>\n      <AddPostReduxForm onSubmit={onAddPost} />\n      <div className={s.posts}>{postsElements}</div>\n    </div>\n  );\n});\n\nconst AddPostForm = props => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field\n          name={\"newPostText\"}\n          component={Textarea}\n          placeholder={\"Enter your post\"}\n          validate={[required, maxLength10]}\n        />\n      </div>\n      <div>\n        <button>Add post</button>\n      </div>\n    </form>\n  );\n};\n\nconst AddPostReduxForm = reduxForm({\n  form: \"profileAddPostForm\"\n})(AddPostForm);\n\nexport default MyPosts;\n","import { connect } from \"react-redux\";\n\nimport MyPosts from \"./MyPosts\";\nimport { addPostActionCreator } from \"../../../redux/profile-reducer\";\n\nlet mapStateToProps = state => {\n  return {\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    addPost: newPostText => {\n      dispatch(addPostActionCreator(newPostText));\n    }\n  };\n};\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;\n","import React from \"react\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\nconst Profile = props => {\n  return (\n    <div>\n      <ProfileInfo\n        profile={props.profile}\n        status={props.status}\n        updateStatus={props.updateStatus}\n        isOwner={props.isOwner}\n        savePhoto={props.savePhoto}\n        saveProfile={props.saveProfile}\n      />\n      <MyPostsContainer />\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nimport Profile from \"./Profile\";\nimport {\n  setUserProfileThunk,\n  getUserStatus,\n  updateUserStatus,\n  savePhotoTh,\n  saveProfile\n} from \"../../redux/profile-reducer\";\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\n\nclass ProfileContainer extends React.Component {\n  refreshProfile() {\n    let userId = this.props.match.params.userId;\n    if (!userId) {\n      userId = this.props.authorizedUserId;\n      if (!userId) {\n        this.props.history.push(\"/login\");\n      }\n    }\n    this.props.setUserProfileThunk(userId);\n    this.props.getUserStatus(userId);\n  }\n\n  componentDidMount() {\n    this.refreshProfile();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.match.params.userId !== prevProps.match.params.userId) {\n      this.refreshProfile();\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Profile\n          {...this.props}\n          profile={this.props.profile}\n          status={this.props.status}\n          updateStatus={this.props.updateUserStatus}\n          isOwner={!this.props.match.params.userId}\n          savePhoto={this.props.savePhotoTh}\n          saveProfile={this.props.saveProfile}\n        />\n      </div>\n    );\n  }\n}\n\nlet mapStateToProps = state => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  authorizedUserId: state.auth.userId,\n  isAuth: state.auth.isAuth\n});\n\nexport default compose(\n  connect(mapStateToProps, {\n    setUserProfileThunk,\n    getUserStatus,\n    updateUserStatus,\n    savePhotoTh,\n    saveProfile\n  }),\n  withRouter,\n  withAuthRedirect\n)(ProfileContainer);\n"],"sourceRoot":""}